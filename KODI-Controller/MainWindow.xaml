<Window x:Class="KODI_Controller.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KODI_Controller"
        mc:Ignorable="d"
        xmlns:vms="clr-namespace:KODI_Controller.ViewModel"
        UseLayoutRounding="True"
        Title="MainWindow">
    
    <!--xmlns:video="clr-namespace:Kodi.JsonRpc.GlobalTypes.Video.Details;assembly=Kodi.JsonRpc"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="Assets/TreeView.xaml" />-->
                <ResourceDictionary Source="Assets/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<BooleanToVisibilityConverter x:Key="visConverter" />-->
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="Video">
                <MenuItem Header="Refresh" Click="Library_Refresh" />
                <MenuItem Header="Clean" Click="Library_Clean" />
            </MenuItem>
        </Menu>

        <Border Grid.Row="2" Background="Blue">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Padding" Value="6,2" />
                    </Style>
                </Grid.Resources>

                <Button Grid.Column="0" Content="Movies" Command="{Binding Path=MoviesCommand}" />
                <Button Grid.Column="2" Content="TV Shows" Command="{Binding Path=TvShowsCommand}" />
                <Button Grid.Column="5" Content="Debug Messages" Click="DebugMessages_Click" />

            </Grid>
        </Border>

        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBox Grid.Row="0" Margin="3,0,0,0" Text="{Binding Path=FilterCriteria, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Content="Filter..." Foreground="Gray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <ListBox Grid.Row="2" ItemsSource="{Binding Path=LibraryView}" BorderThickness="0" Background="Black" HorizontalContentAlignment="Stretch" SelectionMode="Extended">
                    <ListBox.Resources>

                        <DataTemplate DataType="{x:Type vms:MovieItem}">
                            <Border Margin="2" Background="DarkGray" Padding="3" Tag="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}">
                                <Border.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding Path=PlayMovieCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Play" />
                                        <MenuItem Command="{Binding Path=QueueMovieCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Queue" />
                                    </ContextMenu>
                                </Border.ContextMenu>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <Image Height="72" Width="54" Source="{Binding Path=ThumbnailPath, TargetNullValue={x:Null}, IsAsync=True}" RenderOptions.BitmapScalingMode="HighQuality" SnapsToDevicePixels="True" />
                                    <TextBlock Margin="10,0,0,0">
                                    <Run Text="{Binding Path=Title}" FontSize="14" FontWeight="Bold" />
                                    <LineBreak />
                                    <Run Text="Run Time: " />
                                    <Run Text="{Binding Path=RunTime}" />
                                    <Run Text=" | Year: " />
                                    <Run Text="{Binding Path=Year}" />
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vms:TvShowItem}">
                            <Border Margin="2" Background="DarkGray" Padding="3" Tag="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}">
                                <Border.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding Path=QueueTvShowCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Queue Show" />
                                    </ContextMenu>
                                </Border.ContextMenu>
                                
                                <Grid Height="72">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="54" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0" Source="{Binding Path=ThumbnailPath, TargetNullValue={x:Null}, IsAsync=True}" />
                                    <TextBlock Grid.Column="2">
                                    <Run Text="{Binding Path=Title}" FontSize="14" FontWeight="Bold" />
                                    <!--<LineBreak />
                                    <Run Text="Run Time: " />
                                    <Run Text="{Binding Path=RunTime}" />
                                    <Run Text=" Year: " />
                                    <Run Text="{Binding Path=Year}" />-->
                                    </TextBlock>
                                    <Button Grid.Column="3" Margin="10,0,0,0" Command="{Binding Path=ToggleExpanded}" CommandParameter="{Binding}">
                                        ->
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vms:TvSeasonItem}">
                            <Border Grid.Column="1" Margin="20,2,2,2" Background="DarkGray" Padding="3" Tag="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}">
                                <Border.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding Path=QueueTvSeasonCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Queue Season" />
                                    </ContextMenu>
                                </Border.ContextMenu>
                                
                                <Grid Height="72">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="54" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0" Source="{Binding Path=ThumbnailPath, TargetNullValue={x:Null}, IsAsync=True}" />
                                    <TextBlock Grid.Column="2">
                                    <Run Text="{Binding Path=Title}" FontSize="14" FontWeight="Bold" />
                                    <LineBreak />
                                    <Run Text="Run Time: " />
                                    <Run Text="{Binding Path=RunTime}" />
                                    <Run Text=" | Year: " />
                                    <Run Text="{Binding Path=Year}" />
                                    </TextBlock>
                                    <Button Grid.Column="3" Margin="10,0,0,0" Command="{Binding Path=ToggleExpanded}" CommandParameter="{Binding}">
                                        ->
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vms:TvEpisodeItem}">
                            <Border Margin="40,2,2,2" Background="DarkGray" Padding="3" Tag="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}">
                                <Border.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding Path=PlayTvEpisodeCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Play Episode" />
                                        <MenuItem Command="{Binding Path=QueueTvEpisodeCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Queue Episode" />
                                    </ContextMenu>
                                </Border.ContextMenu>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <Image Height="72" Width="54" Source="{Binding Path=ThumbnailPath, TargetNullValue={x:Null}, IsAsync=True}" />
                                    <TextBlock Margin="10,0,0,0">
                                    <Run Text="{Binding Path=Title}" FontSize="14" FontWeight="Bold" />
                                    <LineBreak />
                                    <Run Text="Run Time: " />
                                    <Run Text="{Binding Path=RunTime}" />
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </DataTemplate>

                    </ListBox.Resources>
                </ListBox>

            </Grid>

            
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="140" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <UniformGrid Grid.Row="0" Columns="2" Rows="3" IsEnabled="{Binding Path=IsPlayerEngaged}">
                    <Button Content="Pause" Command="{Binding Path=PlayPauseCommand}" />
                    <Button Content="Stop" Command="{Binding Path=StopCommand}" />

                    <Button Content="PL Back" Command="{Binding Path=PlaylistBack}" />
                    <Button Content="PL Forward" Command="{Binding Path=PlaylistNext}" />
                </UniformGrid>
                <!--
                    ==no==arrows==
                    
                    audio tracks/subtitles
                    speed/shuffle/repeat
                    play/pause/stop/seek/
                    playlist forward/back
                    info
                    
                    ** or does the track info (subtitle & audio) belong on the item summary
                    -->
                    
      


                
                <TextBlock Grid.Row="2" FontSize="16" FontWeight="Bold" Text="Playlist" />
                <StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Content="PL Clear" Click="Button_Click_1" />
                    <Button Content="PL Play" Click="Button_Click" Margin="5,0,0,0" />
                </StackPanel>

                <ListView Grid.Row="4" ItemsSource="{Binding Path=PlaylistItems}">
                    <ListView.Resources>
                        <local:CurrentlyPlayingConverter x:Key="playingConverter" />
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Path=Title}"/>
                            <GridViewColumn Header="Run Time" DisplayMemberBinding="{Binding Path=RunTime}"/>
                            <GridViewColumn Header="Last Played" DisplayMemberBinding="{Binding Path=LastPlayed, StringFormat=yyyy-MM-dd}"/>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ResourceKey=playingConverter}">
                                            <Binding Path="DataContext.PlayingItem" RelativeSource="{RelativeSource AncestorType=Window}" />
                                            <Binding Path="All" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Background" Value="Violet" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding Path=PlayPlaylistItemCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Play" />
                                        <MenuItem Command="{Binding Path=RemovePlaylistItemCommand}" CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Remove" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

                <StatusBar Grid.Row="5" HorizontalAlignment="Stretch" Background="DarkGray">
                    <StatusBar.Resources>
                        <Style TargetType="StatusBarItem">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Margin" Value="5,0,0,0" />
                            <Setter Property="Padding" Value="5,3" />
                        </Style>
                    </StatusBar.Resources>
                    <StatusBarItem>
                        <TextBlock>
                            <Run Text="Items: " />
                            <Run Text="{Binding Path=PlaylistCount, Mode=OneWay}" />
                        </TextBlock>
                    </StatusBarItem>
                    <StatusBarItem>
                        <TextBlock>
                            <Run Text="Total Run Time: " />
                            <Run Text="{Binding Path=PlaylistTotalRuntime, Mode=OneWay}" />
                        </TextBlock>
                    </StatusBarItem>
                </StatusBar>

            </Grid>
            
        </Grid>

    </Grid>
</Window>
